import { Document, Schema, model, models } from "mongoose";

export interface IProfile extends Document {
  _id: string;
  title: string;
  description: string;
  price: {
    _id: string; // Automatically generated by MongoDB
    productNumber: string;
    pageType: string;
    priceInUsd: string;
    priceInKsh: string;
    description: string;
  };
  imageUrl?: string; // Array of photo URLs
  imageTitle?: string;
  // for Ngo
  name: string;
  physicalAddress: string;
  postalAddress: string;
  telephoneNumber: string;
  faxNumber?: string;
  email: string;
  website?: string;
  contactPersonName: string;
  contactPersonTitle: string;
  createdAtt: Date;
  isFree: boolean;
  category: { _id: string; name: string };
  organizer: { _id: string; firstName: string; lastName: string };
}

const NgoProfileSchema = new Schema({
  title: { type: String },
  description: { type: String, required: true },
  price: { type: Schema.Types.ObjectId, ref: "NgoPricing" },
  imageUrl: { type: String }, // Array of URLs to suitable
  imageTitle: { type: String },
  // for Ngo
  name: { type: String, required: true }, //name of organization
  physicalAddress: { type: String, required: true },
  postalAddress: { type: String, required: true },
  telephoneNumber: { type: String, required: true },
  faxNumber: { type: String },
  email: { type: String, required: true },
  website: { type: String }, //url of their website
  contactPersonName: { type: String, required: true },
  contactPersonTitle: { type: String, required: true },
  createdAtt: { type: Date, default: Date.now },
  isFree: { type: Boolean, default: false },
  category: { type: Schema.Types.ObjectId, ref: "Category" },
  organizer: { type: Schema.Types.ObjectId, ref: "User" }, //user that fills in the info
});

const NgoProfile = models?.NgoProfile || model("NgoProfile", NgoProfileSchema);

export default NgoProfile;
